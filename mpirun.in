#!/bin/sh
#
# This script is a replacement of the "vendor's" mpirun.
#


usage () {

command=`basename $0`
cat <<EOF
Usage: $command -np processors [-machinefile machinefile] [-h] [-v] progname
       mpirun wrapper - frontend. 
       Environment variables: 
       MPI_BIN_DIR    - path to mpirun/mpiexec 
       NODE_NUM_PROCS - number of processors/node
       MPI_VERSION    - see subdirectory SUPPORTED_MPI_VERSIONS for supported versions 
       BATCH_SYSTEM   - see subdirectory SUPPORTED_BATCH_SYSTEMS for supported versions 

       Example:
       MPI_BIN_DIR=/foo NODE_NUM_PROCS=2 MPI_VERSION=MPICH_ch_p4-1.2.4 BATCH_SYSTEM=PBS ./mpirun -np 2 a.out         
EOF
exit 0

}

# MPI_VERSION has the form:
#
#   MPICH-ch_gm-1.2.1
#   LAM-tcp-1.2.2

extract_version () {
    
    distr=`echo $MPI_VERSION | cut -d'-' -f1` 
    comm=`echo $MPI_VERSION | cut -d'-' -f2`
    version=`echo $MPI_VERSION | cut -d'-' -f3` 
    
    if test $verbose -eq 1; then
	echo "MPI distribution :   $distr"
	echo "MPI communication:   $comm"
	echo "MPI version      :   $version"
    fi
}

get_node_num () {

    nodes=`expr $np / $NODE_NUM_PROCS`
    tn=`expr $nodes \* $NODE_NUM_PROCS`
    if test $tn -lt $np; then
	nodes=`echo $nodes+1 | bc`
    fi
}

# Handle user arguments
command=""
while [ $# -ge 1 ]; do
     case $1 in
	 -machinefile    ) shift; MACHINEFILE=$1;;
         -np             ) shift; np=$1;;
         -v              ) verbose="1";;
         -h              ) usage; exit 0 ;;
         *               ) command="$command $1";;
     esac
     shift
done

if [ -z "$command" ];then usage;fi;
if [ -z "$np" ];then usage;fi;

# Configure 
if [ -z "$MPI_VERSION" ];then MPI_VERSION="@MPI_VERSION@"; fi
if [ -z "$MPI_BIN_DIR" ];then MPI_BIN_DIR="@MPI_BIN_PATH@"; fi
if [ -z "$NODE_NUM_PROCS" ];then NODE_NUM_PROCS="@NODE_NUM_PROCS@"; fi
if [ -z "$BATCH_SYSTEM" ];then BATCH_SYSTEM="@BATCH_SYSTEM@"; fi


if [ -z "$MPI_VERSION" ];then usage; fi;
if [ -z "$MPI_BIN_DIR" ];then usage; fi;
if [ -z "$NODE_NUM_PROCS" ];then usage;fi;
if [ -z "$BATCH_SYSTEM" ];then usage;fi;
if [ -z "$MACHINEFILE" ];then MACHINEFILE="$HOME/.machinefile"; fi;

# Nodes
get_node_num 

# Batch system properties
. "@CONFIGDIR@/SUPPORTED_BATCH_SYSTEMS/$BATCH_SYSTEM"
get_properties

# Nodefile check
if [ -z "$NODEFILE" ];then 
    echo "ERROR: Can't find nodefile"
    exit 1
fi
if test x"$verbose" = "x1"; then 
    echo "BATCH_SYSTEM : $BATCH_SYSTEM"
    echo "NODEFILE     : $NODEFILE"
fi

# Execute
scmd="@CONFIGDIR@/SUPPORTED_MPI_VERSIONS/$MPI_VERSION -np $np $command"
if test x"$verbose" = "x1"; then 
    echo "MPI_VERSION : $MPI_VERSION"
    echo "$scmd"
fi
. $scmd


