#!/bin/sh
#


THIS_VERSION="MPICH-ch_gm-1.2.1"

myrinet_ports="2 4 5 6 7"

usage () {

cat <<EOF
Usage: $THIS_VERSION -np processors progname [-h]
       mpirun wrapper.
       Environment variables: MACHINEFILE, MPI_BIN_DIR, NODEFILE, NODE_NUM_PROCS
EOF
exit 0

}


build_machinefile() {

max_nodes=`echo $nodes*5 | bc`
if test $np -gt $max_nodes; then
   echo "ERROR: Not enough nodes"
fi

handled_procs=0
rm -f $MACHINEFILE
touch $MACHINEFILE
echo $np >> $MACHINEFILE
for i in `cat $NODEFILE`; do
    ports=0
    for j in $myrinet_ports; do
	if test $ports -lt $NODE_NUM_PROCS; then
	    if test $handled_procs -lt $np; then
		echo $i $j >> $MACHINEFILE
		ports=`echo $ports+1 | bc`
		handled_procs=`echo $handled_procs+1 | bc`
	    fi
	fi
    done
done
 
}

run () {

    if [ -z "$MPI_BIN_DIR" ];then usage; fi;
    if [ -z "$NODEFILE" ];then usage; fi;
    if [ -z "$NODE_NUM_PROCS" ];then usage; fi;
    if [ -z "$MACHINEFILE" ];then MACHINEFILE="$HOME/.machinefile"; fi;

    build_machinefile
    
# mpirun
    vendor_mpirun=$MPI_BIN_DIR"/mpirun.ch_gm";
# shmem device
    if test $np -gt $nodes; then
	command="--gm-use-shmem "$command;
    fi
# std command
    command="$vendor_mpirun -np $np --gm-f $MACHINEFILE "$command;
    exec $command

}    

check_version () {

libmpich="$MPI_LIB_PATH/libmpich.a"
if test -f "$libmpich" ; then
    ver=`grep MPIVERSION $MPI_BIN_PATH/mpirun | sed 's/.*" *\(.*\)".*/\1/' | cut -d' ' -f1` 
    if test $? -eq 1; then 
	ver="UNKNOWN"
    fi
    device=`grep DEFAULT_DEVICE $MPI_BIN_PATH/mpirun | sed 's/ //g' |  sed 's/.*=\(.*\)/\1/'`
    if test $? -eq 1; then 
	device="UNKNOWN"
    fi
    MPI_VERSION="MPICH-"$device"-"$ver
    if test x"$MPI_VERSION" = x"$THIS_VERSION"; then
	echo $THIS_VERSION
    fi
fi

}

#
# Handle user arguments
#
basecmd=`basename $0`
if test x"$basecmd" = x"$THIS_VERSION"; then 
    command=""
    while [ $# -ge 1 ]; do
	case $1 in
	    -h              ) usage; exit 0 ;;
            -np             ) shift; np=$1;;
            *               ) command="$command $1";;
	esac
	shift
    done
fi
if test x"$basecmd" != "xconfigure"; then 
    run
fi
