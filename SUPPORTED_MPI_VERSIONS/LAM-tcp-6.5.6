#!/bin/sh
#

THIS_VERSION="LAM-tcp-6.5.6"

usage () {

cat <<EOF
Usage: $THIS_VERSION -np processors progname [-h]
       mpirun wrapper.
       Environment variables: MACHINEFILE, MPI_BIN_DIR, NODEFILE, NODE_NUM_PROCS
EOF
exit 0

}


build_machinefile() {

handled_procs=0
rm -f $MACHINEFILE
touch $MACHINEFILE

for i in `cat $NODEFILE`; do
    local_procs=0
    while test $local_procs -lt $NODE_NUM_PROCS; do
	if test $handled_procs -lt $np; then
	    echo $i >> $MACHINEFILE
	    local_procs=`echo $local_procs+1 | bc`
	    handled_procs=`echo $handled_procs+1 | bc`
	fi	
    done
done
 
}

run () {

    if [ -z "$MPI_BIN_DIR" ];then usage; fi;
    if [ -z "$NODEFILE" ];then usage; fi;
    if [ -z "$NODE_NUM_PROCS" ];then usage; fi;
    if [ -z "$MACHINEFILE" ];then MACHINEFILE="$HOME/.machinefile"; fi;

    build_machinefile
    
# mpirun
    vendor_mpirun=$MPI_BIN_DIR"/mpirun";
# std command

    command="-c $np C $command"
    scmd="$MPI_BIN_DIR/lamboot $MACHINEFILE ; sleep 1 ; "
    scmd="$scmd$vendor_mpirun $command ; sleep 1 ; "
    scmd="$scmd$MPI_BIN_DIR/wipe $MACHINEFILE "
    exec $scmd

}


check_version () {

lam_config="$MPI_INCLUDE_PATH/lam_config.h"
if test -f "$lam_config" ; then
  ver=`grep LAM_VERSION $MPI_INCLUDE_PATH/lam_config.h | sed 's/.*"\(.*\)"/\1/' | cut -d' ' -f1`
  if test $? -eq 1; then
    ver="UNKNOWN"
  fi
  device=`$MPI_BIN_PATH/lamboot -V | grep -i 'rpi:' | sed 's/.*:\W*\(.*\)/\1/gi' | sed 's/ /_/g'`
  if test $? -eq 1; then
    device="UNKNOWN"
  fi
  MPI_VERSION="LAM-"$device"-"$ver
  if test x"$MPI_VERSION" = x"$THIS_VERSION"; then
      echo $THIS_VERSION
  fi
fi


}


#
# Handle user arguments
#
basecmd=`basename $0`
if test x"$basecmd" = x"$THIS_VERSION"; then 
    command=""
    while [ $# -ge 1 ]; do
	case $1 in
	    -h              ) usage; exit 0 ;;
            -np             ) shift; np=$1;;
            *               ) command="$command $1";;
	esac
	shift
    done
fi
if test x"$basecmd" != "xconfigure"; then 
    run
fi
